input {
  beats {
    port => 5045
  }
}

filter {
  json {
    source => "message"
    remove_field => ["message"]
  }

  if "_jsonparsefailure" in [tags] {
    drop { }
  }

  if [timestamp] {
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
      target => "timestamp"
    }
    ruby {
      code => "event.set('timestamp', event.get('timestamp').time.strftime('%Y-%m-%d %H:%M:%S'))"
    }
  }

  mutate {
    convert => {
      "status" => "integer"
      "body_bytes_sent" => "integer"
      "request_time" => "float"
      "upstream_response_time" => "float"
    }
  }

  mutate {
    remove_field => [
      "@version", "@timestamp", "agent", "cloud", "ecs", "input", "log", "tags"
    ]
  }
}
output {
  kafka {
    bootstrap_servers => "${LOGSTASH_KAFKA_ENDPOINT}"
    topic_id => "nginx-topic"
    codec => avro_schema_registry {
      endpoint => "http://localhost:8081"
      schema_uri => "/etc/logstash/schema/nginx_log.avsc"
      subject_name => "nginx-topic-value"
      register_schema => true
    }
    value_serializer => "org.apache.kafka.common.serialization.ByteArraySerializer"
  }
}
